{"version":3,"sources":["webpack:///webpack/bootstrap 2f945e9c2918dbcb4df7","webpack:///external \"immutable\"","webpack:///external \"chai\"","webpack:///./src/store/db.js","webpack:///external \"pg\"","webpack:///./temp/specs_entry.js","webpack:///./src/hello_world/hello_world.spec.js","webpack:///./src/hello_world/hello_world.js","webpack:///./config/env_test.json","webpack:///./src/tests/actions.spec.js","webpack:///./scripts/getModelInfo.js","webpack:///./src/tests/migrationScript.spec.js","webpack:///./scripts/migrationScript.js","webpack:///external \"shelljs\"","webpack:///external \"path\"","webpack:///external \"immutablediff\"","webpack:///./src/store/index.js","webpack:///external \"redux\"","webpack:///external \"redux-immutable\"","webpack:///external \"redux-logger\"","webpack:///external \"redux-thunk\"","webpack:///./src/store/dbList.js","webpack:///./scripts/getDatabases.js","webpack:///./src/store/targetDb.js","webpack:///./src/store/dbUrl.js"],"names":["INIT_DB","initDB","db","type","fetchDb","dbName","dispatch","then","catch","console","error","initialDB","state","action","describe","it","to","equal","name","description","a","b","eql","greet","bye","key","attributes","allowNull","expectedAction","actualAction","deep","getModelInfo","selectedDbName","Client","require","portSetting","postgresUrl","client","connect","res","query","modelNames","rows","map","row","tablename","promisedDB","buildModelObjects","Promise","all","model","idx","modelObject","modelAttributeList","buildModelAttributeList","dataTypeMapping","attribute","ordinal_position","column_name","data_type","op","changePath","shell","path","diff","fromJS","store","directoryPath","modelKeyRegex","config","execPath","which","createConfigFiles","modelsPath","configPath","dbUrl","replace","touch","echo","mkdir","getMigrationAction","includes","Error","runMigration","default","getState","get","resolve","now","Date","listOfChanges","targetDb","changeMap","value","modelKey","match","modelName","set","downAction","migration","migrationProcess","exec","async","stdout","on","data","log","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reducer","dbList","middleware","collapsed","initialDbList","POPULATE_DB_LIST","populateDbList","fetchDbNames","dbs","err","getDatabases","databases","anon","datname","UPDATE_DB","updateDB","initialState","initialDbUrl","SET_DB_URL","setDbUrl","url"],"mappings":"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","file":"specs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2f945e9c2918dbcb4df7","module.exports = require(\"immutable\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"immutable\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"chai\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chai\"\n// module id = 1\n// module chunks = 0","import {fromJS, List} from 'immutable'\nimport getModelInfo from '../../scripts/getModelInfo'\n// actions\nexport const INIT_DB = 'INIT_DB'\n\nconst initDB = (db) => ({type: INIT_DB, db: db})\n\n// thunk\n\nexport const fetchDb = dbName => dispatch => {\n  // fetch all db info\n  getModelInfo(dbName)\n    .then(db => dispatch(initDB(db)))\n    .catch(console.error)\n}\n\n// initial state\n\nconst initialDB = List([])\n\n// reducer\n\nexport default function (state = initialDB, action) {\n  switch (action.type) {\n    case INIT_DB:\n      return action.db\n    default:\n      return state\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/db.js","module.exports = require(\"pg\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"pg\"\n// module id = 3\n// module chunks = 0","import \"../src/hello_world/hello_world.spec.js\";\nimport \"../src/tests/actions.spec.js\";\nimport \"../src/tests/migrationScript.spec.js\";\n\n\n\n// WEBPACK FOOTER //\n// ./temp/specs_entry.js","import { expect } from \"chai\";\nimport { greet, bye } from \"./hello_world\";\nimport env from \"env\";\n\ndescribe(\"hello world\", () => {\n  it(\"greets\", () => {\n    expect(greet()).to.equal(\"Hello World!\");\n  });\n\n  it(\"says goodbye\", () => {\n    expect(bye()).to.equal(\"See ya!\");\n  });\n\n  it(\"should load test environment variables\", () => {\n    expect(env.name).to.equal(\"test\");\n    expect(env.description).to.equal(\n      \"Add here any environment specific stuff you like.\"\n    );\n  });\n\n  it(\"babel features should work\", () => {\n    const a = { a: 1 };\n    const b = { ...a, b: 2 };\n    expect(b).to.eql({ a: 1, b: 2 });\n  });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/hello_world/hello_world.spec.js","export const greet = () => {\n  return \"Let's Migrate!\";\n};\n\nexport const bye = () => {\n  return \"See ya!\";\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hello_world/hello_world.js","module.exports = {\"name\":\"test\",\"description\":\"Add here any environment specific stuff you like.\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/env_test.json\n// module id = 7\n// module chunks = 0","import {initDB, INIT_DB} from '../store/db'\nimport {fromJS} from 'immutable'\nimport {expect} from 'chai'\n\ndescribe('actions', () => {\n  it('should create an action to add a db', () => {\n    const db = fromJS(\n      [\n        { //model object\n          key: 1,\n          name: 'users',\n          attributes: [\n            { // attribute objects\n              key: 1,\n              name: 'name',\n              type: 'string',\n              allowNull: false\n            },\n            {\n              key: 2,\n              name: 'email',\n              type: 'string',\n              allowNull: false\n            }\n          ]\n        }\n      ])\n\n    const expectedAction = {\n      type: INIT_DB,\n      db: db\n    }\n    const actualAction = initDB(db)\n    expect(expectedAction).to.deep.equal(actualAction)\n  })\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/tests/actions.spec.js","import {fromJS} from 'immutable'\n\nasync function getModelInfo(selectedDbName) {\n  const { Client } = require('pg')\n\n  // We don't need username and password as long as password is null\n  const portSetting = 'postgres://localhost:5432/'\n  const postgresUrl = portSetting + selectedDbName\n  const client = new Client(postgresUrl)\n\n  await client.connect()\n\n  // Get all models for the selected database\n  const res = await client.query(`SELECT *\n                                  FROM pg_catalog.pg_tables\n                                  WHERE schemaname = 'public'`)\n\n  const modelNames = res.rows.map(row => row.tablename)\n\n  const promisedDB = buildModelObjects(modelNames, client)\n\n  return Promise.all(promisedDB).then(db => fromJS(db))\n}\n\nfunction buildModelObjects(modelNames, client) {\n  return modelNames.map(async (model, idx) => {\n    const modelObject = {\n      key: idx,\n      name: model,\n      attributes: []\n    }\n\n    // Get each attribute on a model, their index, and data type\n    const attributes = await client.query(`SELECT column_name, ordinal_position, data_type\n                                           FROM information_schema.columns\n                                           WHERE table_name = '${model}'`)\n\n    const modelAttributeList = buildModelAttributeList(attributes)\n    modelObject.attributes = modelAttributeList\n    return modelObject\n  })\n}\n\nfunction buildModelAttributeList(attributes) {\n  const dataTypeMapping = { 'character varying': 'STRING',\n                            'integer': 'INTEGER',\n                            'timestamp with time zone': 'DATE',\n                            'boolean': 'BOOLEAN',\n                            'text': 'TEXT',\n                            'double precision': 'FLOAT'\n                          }\n\n  return attributes.rows.map(attribute => {\n    return {\n      key: attribute.ordinal_position,\n      name: attribute.column_name,\n      type: dataTypeMapping[attribute.data_type] || attribute.data_type\n    }\n  })\n}\n\nexport default getModelInfo\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/getModelInfo.js","import {getMigrationAction} from '../../scripts/migrationScript'\nimport {expect} from 'chai'\n\ndescribe('The migration script', () => {\n  it('has a getMigrationAction function that returns expected migration action', () => {\n    let op = 'add',\n        changePath = '/3/attributes/3';\n\n    expect(getMigrationAction(op, changePath)).to.equal('addColumn');\n  })\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/tests/migrationScript.spec.js","const shell = require('shelljs')\nconst path = require('path')\nconst diff = require('immutablediff')\nconst {fromJS} = require('immutable')\nconst store = require('../src/store')\nconst directoryPath = '/Users/Jon/Documents/fullstack/boilermaker'\n\n// Regexp to get model key inside runmigrations .map\nconst modelKeyRegex = /\\/(\\d+)\\//\n// Required because of bug with electron and shelljs\nshell.config.execPath = shell.which('node')\n\n\n/******************HELPER FUNCTIONS *******************/\nconst createConfigFiles = (modelsPath, configPath, dbUrl) => {\n  //import config data. We don't need username and password as long as password is null\n  const dbName = dbUrl.replace('postgres://localhost:5432/', '')\n  const config = `{\n    \"development\": {\n      \"database\": \"${dbName}\",\n      \"host\": \"127.0.0.1\",\n      \"dialect\": \"postgres\"\n    }\n  }`\n  // setup sequelizerc file\n  shell.touch(`.sequelizerc`)\n  shell.echo(`const path = require('path')\\nmodule.exports = {'config': '${configPath}',\\n  'models-path': '${modelsPath}'\\n}`).to(`.sequelizerc`)\n  // setup config file with db credentials\n  shell.echo(config).to(`config/config.json`)\n  // create migrations folder\n  shell.mkdir(`migrations`)\n}\n\nexport const getMigrationAction = (op, changePath) => {\n  if (changePath.includes('attributes')) {\n    // for column actions\n    switch (op) {\n      case 'add':\n        return 'addColumn'\n      case 'remove':\n        return 'removeColumn'\n      case 'replace':\n        return changePath.includes('name') ? 'renameColumn' : 'changeColumn'\n      default:\n        return new Error(`migration type error, with operation ${op} and path ${changePath}`)\n    }\n  } else {\n    // for table actions\n    switch (op) {\n      case 'add':\n        return 'createTable'\n      case 'remove':\n        return 'dropTable'\n      case 'replace':\n        return 'renameTable'\n      default:\n        return new Error(`migration type error, with operation ${op} and path ${changePath}`)\n    }\n  }\n}\n\n/******************************************/\n\n\n/****************MAIN FUNCTION *************/\nconst runMigration = async () => {\n\n  // get db from store\n  const state = store.default.getState()\n  const db = state.get('db')\n  const dbUrl = state.get('dbUrl')\n  shell.echo('starting migration')\n\n  //********** setup *********//\n\n  const modelsPath = path.resolve('server', 'db', 'models')\n  const configPath = path.resolve('config', 'config.json')\n  const now = Date.now()\n\n  // create config files and migration folders if they don't exist\n  createConfigFiles(modelsPath, configPath, dbUrl)\n\n\n  // ******* Find differences to migrate ***********//\n\n  // //TESTING ONLY - SHOULD IMPORT FROM STORE\n  // const attributes = db.getIn(['2', 'attributes'])\n  // const targetDb = db.setIn(['2', 'attributes'], attributes.push({\n  //   key: 21,\n  //   name: 'oregano',\n  //   type: 'INTEGER'\n  // }))\n  // //***************\n\n  // get the diff between the two objects and\n  // add model name and action to diff\n  const listOfChanges = diff(db, targetDb).map(changeMap => {\n\n    // add more logic here for different migrations\n    // create table\n    // drop table\n    // rename table\n    // rename column\n    // change column\n\n    let value //figure out logic for adding value for removeAction\n    const op = changeMap.get('op')\n    const changePath = changeMap.get('path')\n    const modelKey = changeMap.get('path').match(modelKeyRegex)[1]\n    const modelName = targetDb.get(modelKey).get('name')\n    return changeMap\n      .set('model', modelName)\n      .set('action', getMigrationAction(op, changePath))\n      .set('value', value || changeMap.value)\n  })\n  // --> List of changes now has maps (objects) that have model, action, and value\n\n\n  // create migrations file by looping through List of changes and creating functions for each. This just gets the first one.\n  const model = listOfChanges.get('0').get('model')\n  const action = listOfChanges.get('0').get('action')\n  let downAction\n  // add more logic here for opposite (down) actions\n  if (action === 'addColumn') {\n    downAction = 'removeColumn'\n  }\n  const type = listOfChanges.get('0').get('value').get('type')\n  const name = listOfChanges.get('0').get('value').get('name')\n\n  const migration = `{\n    up: (queryInterface, Sequelize) => {\n      return queryInterface[\"${action}\"](\"${model}\", \"${name}\", Sequelize.${type})\n    },\n    down: (queryInterface, Sequelize) => {\n      return queryInterface[\"${downAction}\"](\"${model}\", \"${name}\", Sequelize.${type})\n    }\n  }`\n\n  // write migration file\n  shell.echo(`\"use strict\" \\nmodule.exports = ${migration}`).to(`migrations/${now}-${model}.js`)\n\n  // Run migration\n  //if (shell.exec(`node_modules/.bin/sequelize db:migrate`).code !== 0)\n  const migrationProcess = await shell.exec(`node_modules/.bin/sequelize db:migrate`, {async: true})\n  migrationProcess.stdout.on('data', function(data) {\n    console.log('success', data)\n  })\n}\n\nexport default runMigration\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/migrationScript.js","module.exports = require(\"shelljs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"shelljs\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 13\n// module chunks = 0","module.exports = require(\"immutablediff\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"immutablediff\"\n// module id = 14\n// module chunks = 0","import {createStore, applyMiddleware, compose} from 'redux'\nimport {combineReducers} from 'redux-immutable'\nimport {createLogger} from 'redux-logger'\nimport thunkMiddleware from 'redux-thunk'\nimport db from './db'\nimport dbList from './dbList'\nimport targetDb from './targetDb'\nimport dbUrl from './dbUrl'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducer = combineReducers({db, dbList, targetDb, dbUrl})\nconst middleware = applyMiddleware(\n  thunkMiddleware,\n  createLogger({collapsed: true})\n)\nconst store = createStore(reducer, composeEnhancers(middleware))\n\nexport default store\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/index.js","module.exports = require(\"redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"redux-immutable\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux-immutable\"\n// module id = 17\n// module chunks = 0","module.exports = require(\"redux-logger\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux-logger\"\n// module id = 18\n// module chunks = 0","module.exports = require(\"redux-thunk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux-thunk\"\n// module id = 19\n// module chunks = 0","import {List} from 'immutable'\nimport getDatabases from '../../scripts/getDatabases'\n\nconst initialDbList = List(['bananas'])\n\n// action\n\nconst POPULATE_DB_LIST = 'POPULATE_DB_LIST'\n\nconst populateDbList = (dbList) => ({type: POPULATE_DB_LIST, dbList})\n\n// thunk\n\nexport const fetchDbNames = () => dispatch => {\n  getDatabases()\n    .then(dbs => {\n      const dbList = List(dbs)\n      return dispatch(populateDbList(dbList))\n    })\n    .catch(err => console.error(err))\n}\n\n// reducer\n\nexport default function (state = initialDbList, action) {\n  switch (action.type) {\n    case POPULATE_DB_LIST:\n      return action.dbList\n    default:\n      return state\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/dbList.js","async function getDatabases() {\n  const { Client } = require('pg')\n\n  const client = new Client()\n  await client.connect()\n\n  const res = await client.query('SELECT datname FROM pg_database WHERE datistemplate = false;');\n\n  let databases = res.rows.map(anon => {\n    return anon.datname\n  })\n\n  return databases\n}\n\nexport default getDatabases;\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/getDatabases.js","import {List} from 'immutable'\nimport {INIT_DB} from './db'\n\n// actions\n\nexport const UPDATE_DB = 'UPDATE_DB'\n\nexport const updateDB = (targetDb) => ({type: UPDATE_DB, targetDb})\n\n// reducer\n\nconst initialState = List([])\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case INIT_DB:\n      return action.db\n    case UPDATE_DB:\n      return action.targetDb\n    default:\n      return state\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/targetDb.js","const initialDbUrl = '127.0.0.1:5432/migrate'\n\n// action\n\nconst SET_DB_URL = 'SET_DB_URL'\n\nexport const setDbUrl = url => ({type: SET_DB_URL, url})\n\n// reducer\n\nexport default function (state = initialDbUrl, action) {\n  switch (action.type) {\n    case SET_DB_URL:\n      return action.url\n    default:\n      return state\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/dbUrl.js"],"sourceRoot":""}