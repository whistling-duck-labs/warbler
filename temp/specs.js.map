{"version":3,"sources":["webpack:///webpack/bootstrap a854d6482c46283032b6","webpack:///external \"immutable\"","webpack:///external \"chai\"","webpack:///./src/store/db.js","webpack:///external \"pg\"","webpack:///external \"immutablediff\"","webpack:///./temp/specs_entry.js","webpack:///./src/hello_world/hello_world.spec.js","webpack:///./src/hello_world/hello_world.js","webpack:///./config/env_test.json","webpack:///./src/tests/actions.spec.js","webpack:///./scripts/getModelInfo.js","webpack:///./src/tests/migrationScript.spec.js","webpack:///./scripts/migrationScript.js","webpack:///external \"shelljs\"","webpack:///external \"path\"","webpack:///./src/store/index.js","webpack:///external \"redux\"","webpack:///external \"redux-immutable\"","webpack:///external \"redux-logger\"","webpack:///external \"redux-thunk\"","webpack:///./src/store/dbList.js","webpack:///./scripts/getDatabases.js","webpack:///./src/store/targetDb.js","webpack:///./src/store/dbUrl.js","webpack:///./e2e/utils.js","webpack:///external \"electron\"","webpack:///external \"spectron\""],"names":["INIT_DB","initDB","db","type","fetchDb","dbName","dispatch","then","catch","console","error","initialDB","state","action","describe","it","to","equal","name","description","a","b","eql","greet","bye","key","attributes","allowNull","expectedAction","actualAction","deep","getModelInfo","selectedDbName","Client","require","portSetting","postgresUrl","client","connect","res","query","modelNames","rows","map","row","tablename","promisedDB","buildModelObjects","Promise","all","model","idx","modelObject","modelAttributeList","buildModelAttributeList","dataTypeMapping","attribute","ordinal_position","column_name","data_type","op","changePath","be","an","instanceOf","Error","changes","log","shell","path","diff","fromJS","store","directoryPath","regex","modelKey","attributeKey","config","execPath","which","createConfigFiles","modelsPath","configPath","dbUrl","replace","touch","echo","mkdir","getMigrationAction","includes","getListOfChanges","targetDb","changeMap","value","get","match","modelKeyRegex","modelName","attributeKeyRegex","attributeName","getIn","set","runMigration","default","getState","resolve","now","Date","listOfChanges","downAction","migration","migrationProcess","exec","async","stdout","on","data","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reducer","dbList","middleware","collapsed","initialDbList","POPULATE_DB_LIST","populateDbList","fetchDbNames","dbs","err","getDatabases","databases","anon","datname","UPDATE_DB","updateDB","initialState","initialDbUrl","SET_DB_URL","setDbUrl","url","beforeEach","timeout","app","args","startTimeout","waitTimeout","start","afterEach","isRunning","stop","undefined","setIn"],"mappings":"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","file":"specs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a854d6482c46283032b6","module.exports = require(\"immutable\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"immutable\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"chai\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chai\"\n// module id = 1\n// module chunks = 0","import {fromJS, List} from 'immutable'\nimport getModelInfo from '../../scripts/getModelInfo'\n// actions\nexport const INIT_DB = 'INIT_DB'\n\nconst initDB = (db) => ({type: INIT_DB, db: db})\n\n// thunk\n\nexport const fetchDb = dbName => dispatch => {\n  // fetch all db info\n  getModelInfo(dbName)\n    .then(db => dispatch(initDB(db)))\n    .catch(console.error)\n}\n\n// initial state\n\nconst initialDB = List([])\n\n// reducer\n\nexport default function (state = initialDB, action) {\n  switch (action.type) {\n    case INIT_DB:\n      return action.db\n    default:\n      return state\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/db.js","module.exports = require(\"pg\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"pg\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"immutablediff\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"immutablediff\"\n// module id = 4\n// module chunks = 0","import \"../src/hello_world/hello_world.spec.js\";\nimport \"../src/tests/actions.spec.js\";\nimport \"../src/tests/migrationScript.spec.js\";\n\n\n\n// WEBPACK FOOTER //\n// ./temp/specs_entry.js","import { expect } from \"chai\";\nimport { greet, bye } from \"./hello_world\";\nimport env from \"env\";\n\ndescribe(\"hello world\", () => {\n  it(\"greets\", () => {\n    expect(greet()).to.equal(\"Hello World!\");\n  });\n\n  it(\"says goodbye\", () => {\n    expect(bye()).to.equal(\"See ya!\");\n  });\n\n  it(\"should load test environment variables\", () => {\n    expect(env.name).to.equal(\"test\");\n    expect(env.description).to.equal(\n      \"Add here any environment specific stuff you like.\"\n    );\n  });\n\n  it(\"babel features should work\", () => {\n    const a = { a: 1 };\n    const b = { ...a, b: 2 };\n    expect(b).to.eql({ a: 1, b: 2 });\n  });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/hello_world/hello_world.spec.js","export const greet = () => {\n  return \"Let's Migrate!\";\n};\n\nexport const bye = () => {\n  return \"See ya!\";\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hello_world/hello_world.js","module.exports = {\"name\":\"test\",\"description\":\"Add here any environment specific stuff you like.\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/env_test.json\n// module id = 8\n// module chunks = 0","import {initDB, INIT_DB} from '../store/db'\nimport {fromJS} from 'immutable'\nimport {expect} from 'chai'\n\ndescribe('actions', () => {\n  it('should create an action to add a db', () => {\n    const db = fromJS(\n      [\n        { //model object\n          key: 1,\n          name: 'users',\n          attributes: [\n            { // attribute objects\n              key: 1,\n              name: 'name',\n              type: 'string',\n              allowNull: false\n            },\n            {\n              key: 2,\n              name: 'email',\n              type: 'string',\n              allowNull: false\n            }\n          ]\n        }\n      ])\n\n    const expectedAction = {\n      type: INIT_DB,\n      db: db\n    }\n    const actualAction = initDB(db)\n    expect(expectedAction).to.deep.equal(actualAction)\n  })\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/tests/actions.spec.js","import {fromJS} from 'immutable'\n\nasync function getModelInfo(selectedDbName) {\n  const { Client } = require('pg')\n\n  // We don't need username and password as long as password is null\n  const portSetting = 'postgres://localhost:5432/'\n  const postgresUrl = portSetting + selectedDbName\n  const client = new Client(postgresUrl)\n\n  await client.connect()\n\n  // Get all models for the selected database\n  const res = await client.query(`SELECT *\n                                  FROM pg_catalog.pg_tables\n                                  WHERE schemaname = 'public'`)\n\n  const modelNames = res.rows.map(row => row.tablename)\n\n  const promisedDB = buildModelObjects(modelNames, client)\n\n  return Promise.all(promisedDB).then(db => fromJS(db))\n}\n\nfunction buildModelObjects(modelNames, client) {\n  return modelNames.map(async (model, idx) => {\n    const modelObject = {\n      key: idx,\n      name: model,\n      attributes: []\n    }\n\n    // Get each attribute on a model, their index, and data type\n    const attributes = await client.query(`SELECT column_name, ordinal_position, data_type\n                                           FROM information_schema.columns\n                                           WHERE table_name = '${model}'`)\n\n    const modelAttributeList = buildModelAttributeList(attributes)\n    modelObject.attributes = modelAttributeList\n    return modelObject\n  })\n}\n\nfunction buildModelAttributeList(attributes) {\n  const dataTypeMapping = { 'character varying': 'STRING',\n                            'integer': 'INTEGER',\n                            'timestamp with time zone': 'DATE',\n                            'boolean': 'BOOLEAN',\n                            'text': 'TEXT',\n                            'double precision': 'FLOAT'\n                          }\n\n  return attributes.rows.map(attribute => {\n    return {\n      key: attribute.ordinal_position,\n      name: attribute.column_name,\n      type: dataTypeMapping[attribute.data_type] || attribute.data_type\n    }\n  })\n}\n\nexport default getModelInfo\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/getModelInfo.js","import {fromJS} from 'immutable'\nimport diff from 'immutablediff'\nimport {getMigrationAction, getListOfChanges} from '../../scripts/migrationScript'\nimport {expect} from 'chai'\nimport {db, targetDb} from '../../e2e/utils'\n/*const db = fromJS(\n      [\n        { //model object\n          key: 1,\n          name: 'users',\n          attributes: [\n            { // attribute objects\n              key: 1,\n              name: 'name',\n              type: 'string',\n              allowNull: false\n            },\n            {\n              key: 2,\n              name: 'email',\n              type: 'string',\n              allowNull: false\n            }\n          ]\n        }\n      ]),\n      targetDb = db.setIn(['0', 'attributes', '2'], fromJS({name: 'isAdmin', type: 'boolean'})),\n      puppyBowl = 'puppies'*/\n\ndescribe('The migration script', () => {\n\n  describe('has a getMigrationAction function', () =>{\n    it('returns add migration action', () => {\n    let op = 'add',\n        changePath = '/3/attributes/3'\n\n      expect(getMigrationAction(op, changePath)).to.equal('addColumn')\n    }),\n    it('returns removeColumn migration action', () => {\n      let op = 'remove',\n          changePath = '/3/attributes/3'\n\n      expect(getMigrationAction(op, changePath)).to.equal('removeColumn')\n    }),\n    it('throws a new error', () => {\n      let op ='puppyBowl',\n          changePath = '/3/attributes/3',\n          error = `migration type error, with operation ${op} and path ${changePath}`\n\n      expect(getMigrationAction(op, changePath)).to.be.an.instanceOf(Error)\n    })\n  }),\n\n  describe('has a getListOfChanges function', () => {\n    it('returns the list of changes', () => {\n      const changes = diff(db, targetDb)\n      console.log(fromJS)\n      console.log('puppyBowl')\n    })\n  })\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/tests/migrationScript.spec.js","const shell = require('shelljs')\nconst path = require('path')\nconst diff = require('immutablediff')\nconst {fromJS} = require('immutable')\nconst store = require('../src/store')\nconst directoryPath = '/Users/Jon/Documents/fullstack/boilermaker'\n\n// Regexp to get model key inside runmigrations .map\nexport const regex = {\n                modelKey: /\\/(\\d+)/,\n                attributeKey: /attributes\\/(\\d+)/\n              }\n// Required because of bug with electron and shelljs\nshell.config.execPath = shell.which('node')\n\n\n/******************HELPER FUNCTIONS *******************/\nconst createConfigFiles = (modelsPath, configPath, dbUrl) => {\n  //import config data. We don't need username and password as long as password is null\n  const dbName = dbUrl.replace('postgres://localhost:5432/', '')\n  const config = `{\n    \"development\": {\n      \"database\": \"${dbName}\",\n      \"host\": \"127.0.0.1\",\n      \"dialect\": \"postgres\"\n    }\n  }`\n  // setup sequelizerc file\n  shell.touch(`.sequelizerc`)\n  shell.echo(`const path = require('path')\\nmodule.exports = {'config': '${configPath}',\\n  'models-path': '${modelsPath}'\\n}`).to(`.sequelizerc`)\n  // setup config file with db credentials\n  shell.echo(config).to(`config/config.json`)\n  // create migrations folder\n  shell.mkdir(`migrations`)\n}\n\nexport const getMigrationAction = (op, changePath) => {\n  if (changePath.includes('attributes')) {\n    // for column actions\n    switch (op) {\n      case 'add':\n        return 'addColumn'\n      case 'remove':\n        return 'removeColumn'\n      case 'replace':\n        return changePath.includes('name') ? 'renameColumn' : 'changeColumn'\n      default:\n        return new Error(`migration type error, with operation ${op} and path ${changePath}`)\n    }\n  } else {\n    // for table actions\n    switch (op) {\n      case 'add':\n        return 'createTable'\n      case 'remove':\n        return 'dropTable'\n      case 'replace':\n        return 'renameTable'\n      default:\n        throw new Error(`migration type error, with operation ${op} and path ${changePath}`)\n    }\n  }\n}\n\nexport const getListOfChanges = (db, targetDb) => {\n  return diff(db, targetDb).map(changeMap => {\n\n    // add more logic here for different migrations\n    // create table\n    // drop table\n    // rename table\n    // rename column\n    // change column\n\n    let value //figure out logic for adding value for removeAction\n    const op = changeMap.get('op')\n    const changePath = changeMap.get('path')\n    const modelKey = changeMap.get('path').match(modelKeyRegex)[1]\n    const modelName = db.get(modelKey).get('name')\n    const attributeKey = changeMap.get('path').match(attributeKeyRegex)[1]\n    const attributeName = db.getIn([modelKey, 'attributes', attributeKey, 'name'])\n    return changeMap\n      .set('model', modelName)\n      .set('action', getMigrationAction(op, changePath))\n      .set('value', changeMap.value || { name: attributeName })\n  })\n}\n\n\n/******************************************/\n\n/****************MAIN FUNCTION *************/\nconst runMigration = async () => {\n\n  // get db from store\n  const state = store.default.getState()\n  const db = state.get('db')\n  const dbUrl = state.get('dbUrl')\n  shell.echo('starting migration')\n\n  //********** setup *********//\n\n  const modelsPath = path.resolve('server', 'db', 'models')\n  const configPath = path.resolve('config', 'config.json')\n  const now = Date.now()\n\n  // create config files and migration folders if they don't exist\n  createConfigFiles(modelsPath, configPath, dbUrl)\n\n\n  // ******* Find differences to migrate ***********//\n\n\n  // get the diff between the two objects and\n  // add model name and action to diff\n  const listOfChanges = getListOfChanges(db, targetDb)\n    // --> List of changes now has maps (objects) that have model, action, and value\n\n\n  // create migrations file by looping through List of changes and creating functions for each. This just gets the first one.\n  const model = listOfChanges.get('0').get('model')\n  const action = listOfChanges.get('0').get('action')\n  let downAction\n  // add more logic here for opposite (down) actions\n  if (action === 'addColumn') {\n    downAction = 'removeColumn'\n  }\n  const type = listOfChanges.get('0').get('value').get('type')\n  const name = listOfChanges.get('0').get('value').get('name')\n\n  const migration = `{\n    up: (queryInterface, Sequelize) => {\n      return queryInterface[\"${action}\"](\"${model}\", \"${name}\", Sequelize.${type})\n    },\n    down: (queryInterface, Sequelize) => {\n      return queryInterface[\"${downAction}\"](\"${model}\", \"${name}\", Sequelize.${type})\n    }\n  }`\n\n  //const migration = generateMigration()\n\n  // write migration file\n  shell.echo(`\"use strict\" \\nmodule.exports = ${migration}`).to(`migrations/${now}.js`)\n\n  // Run migration\n  //if (shell.exec(`node_modules/.bin/sequelize db:migrate`).code !== 0)\n  const migrationProcess = await shell.exec(`node_modules/.bin/sequelize db:migrate`, {async: true})\n  migrationProcess.stdout.on('data', function(data) {\n    console.log('success', data)\n  })\n}\n\nexport default runMigration\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/migrationScript.js","module.exports = require(\"shelljs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"shelljs\"\n// module id = 13\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 14\n// module chunks = 0","import {createStore, applyMiddleware, compose} from 'redux'\nimport {combineReducers} from 'redux-immutable'\nimport {createLogger} from 'redux-logger'\nimport thunkMiddleware from 'redux-thunk'\nimport db from './db'\nimport dbList from './dbList'\nimport targetDb from './targetDb'\nimport dbUrl from './dbUrl'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducer = combineReducers({db, dbList, targetDb, dbUrl})\nconst middleware = applyMiddleware(\n  thunkMiddleware,\n  createLogger({collapsed: true})\n)\nconst store = createStore(reducer, composeEnhancers(middleware))\n\nexport default store\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/index.js","module.exports = require(\"redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"redux-immutable\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux-immutable\"\n// module id = 17\n// module chunks = 0","module.exports = require(\"redux-logger\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux-logger\"\n// module id = 18\n// module chunks = 0","module.exports = require(\"redux-thunk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux-thunk\"\n// module id = 19\n// module chunks = 0","import {List} from 'immutable'\nimport getDatabases from '../../scripts/getDatabases'\n\nconst initialDbList = List(['bananas'])\n\n// action\n\nconst POPULATE_DB_LIST = 'POPULATE_DB_LIST'\n\nconst populateDbList = (dbList) => ({type: POPULATE_DB_LIST, dbList})\n\n// thunk\n\nexport const fetchDbNames = () => dispatch => {\n  getDatabases()\n    .then(dbs => {\n      const dbList = List(dbs)\n      return dispatch(populateDbList(dbList))\n    })\n    .catch(err => console.error(err))\n}\n\n// reducer\n\nexport default function (state = initialDbList, action) {\n  switch (action.type) {\n    case POPULATE_DB_LIST:\n      return action.dbList\n    default:\n      return state\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/dbList.js","async function getDatabases() {\n  const { Client } = require('pg')\n\n  const client = new Client()\n  await client.connect()\n\n  const res = await client.query('SELECT datname FROM pg_database WHERE datistemplate = false;');\n\n  let databases = res.rows.map(anon => {\n    return anon.datname\n  })\n\n  return databases\n}\n\nexport default getDatabases;\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/getDatabases.js","import {List} from 'immutable'\nimport {INIT_DB} from './db'\n\n// actions\n\nexport const UPDATE_DB = 'UPDATE_DB'\n\nexport const updateDB = (targetDb) => ({type: UPDATE_DB, targetDb})\n\n// reducer\n\nconst initialState = List([])\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case INIT_DB:\n      return action.db\n    case UPDATE_DB:\n      return action.targetDb\n    default:\n      return state\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/targetDb.js","const initialDbUrl = '127.0.0.1:5432/migrate'\n\n// action\n\nconst SET_DB_URL = 'SET_DB_URL'\n\nexport const setDbUrl = url => ({type: SET_DB_URL, url})\n\n// reducer\n\nexport default function (state = initialDbUrl, action) {\n  switch (action.type) {\n    case SET_DB_URL:\n      return action.url\n    default:\n      return state\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/dbUrl.js","import electron from \"electron\";\nimport { Application } from \"spectron\";\nimport { fromJS } from \"immutable\";\n\nconst beforeEach = function() {\n  this.timeout(10000);\n  this.app = new Application({\n    path: electron,\n    args: [\".\"],\n    startTimeout: 10000,\n    waitTimeout: 10000\n  });\n  return this.app.start();\n};\n\nconst afterEach = function() {\n  this.timeout(10000);\n  if (this.app && this.app.isRunning()) {\n    return this.app.stop();\n  }\n  return undefined;\n};\n\nconst db = fromJS(\n      [\n        { //model object\n          key: 1,\n          name: 'users',\n          attributes: [\n            { // attribute objects\n              key: 1,\n              name: 'name',\n              type: 'string',\n              allowNull: false\n            },\n            {\n              key: 2,\n              name: 'email',\n              type: 'string',\n              allowNull: false\n            }\n          ]\n        }\n      ])\n\nconst targetDb = db.setIn(['0', 'attributes', '2'], fromJS({name: 'isAdmin', type: 'boolean'}))\n\nexport default {\n  beforeEach,\n  afterEach,\n  db,\n  targetDb\n};\n\n\n\n// WEBPACK FOOTER //\n// ./e2e/utils.js","module.exports = require(\"electron\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"electron\"\n// module id = 25\n// module chunks = 0","module.exports = require(\"spectron\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"spectron\"\n// module id = 26\n// module chunks = 0"],"sourceRoot":""}